
/**
 * Scrape news data, parse, and insert into database.
 */

var express = require('express')
   , request = require('request')
   , mongo = require('mongodb')
   , md5 = require('MD5')
   , cheerio = require('cheerio')
   , moment = require('moment');

var uristring =
  process.env.MONGOLAB_URI ||
  process.env.MONGOHQ_URL ||
  'mongodb://heroku_app23495772:6dv4rti8nij007hn89t0strkba@ds035557.mongolab.com:35557/heroku_app23495772';

var articlesDB;
var articleCollection;

exports.google = function(req, res) {

   var timeInterval = setInterval(getNewTopics, .2 * 60 * 1000);

   function getNewTopics() {

      console.log("");
      console.log('');
      console.log('**************************************');
      console.log('******** Getting new articles ********');
      console.log('**************************************');
      console.log('...');
      console.log('');

      var url = 'http://news.google.com'
      ,   json = {};

      json.topics = []
      json.timestamp = moment()._d;

      request(url, function(err, resp, body) {

         if (err) {
            throw err;
         }

         $ = cheerio.load(body);

         // iterate through articles
         $('.story').each(function() {
             var titleCheck = $(this).find('.story .esc-lead-article-title-wrapper a.article .titletext').text();
             if (titleCheck.length) {
               var articles = []
               ,   article = {};

               articles.topic_id = "";

               // Main Article
               article.title = titleCheck;
               article.href = $(this).find('.story .esc-lead-article-title-wrapper a.article').attr('url');
               article.source = $(this).find('.story .esc-lead-article-source-wrapper .al-attribution-source').text();

               articles.push(article);

               // Related Articles
               $(this).find('.story .esc-extension-wrapper .esc-secondary-article-wrapper').each(function() {
                  var relatedTitle  = $(this).find('.esc-secondary-article-title-wrapper a.article .titletext').text();
                  if (relatedTitle.length) {
                     article = {};
                     article.title = relatedTitle;
                     article.href = $(this).find('.esc-secondary-article-title-wrapper a.article').attr('href');
                     article.source = $(this).find('.esc-secondary-article-title-wrapper .esc-secondary-article-source').text();
                     articles.push(article);
                  }
               });

               if (articles.length){
                  var hrefs = articles.map(function(eachObj){
                     return eachObj.href;
                  });

                  connectToDb(function(){
                     checkHREFS(hrefs);
                  });

                  for (var i = 0, l = articles.length; i < l; i++) {
                     var currentDocument = articles[i];
                     json.topics.push(currentDocument);
                  }
                  // json.topics.push(articles);
               }
             }
         });
         console.log("Found " + json.topics.length + " articles on " + json.timestamp);
         connectToDb(function(){
            articlesToDB(json.topics);
         });
         // To Database
      });
   }
}

function connectToDb(done){
   if (articlesDB === undefined) {
      mongo.connect(uristring, function (err, db) {
         if (err) {
            console.log ('ERROR connecting to: ' + uristring + '. ' + err);
         } else {
            console.log ('Succeeded connected to: ' + uristring);
            articlesDB = db;
            articleCollection = articlesDB.collection('articles');
            done();
         }
     });
  } else {
     return done();
  }
}

function articlesToDB(articles) {
   articlesDB.createCollection('articles', function(err, collection) {});
   articleCollection.insert(articles, {continueOnError: true}, function(err, result) {
      if (err) {
         console.log('ERROR:' + err);
      } else {
         console.log('*******************************************');
         console.log('********Succeeded inserted articles********');
         console.log('*******************************************');
      }
   });
}

function checkHREFS(hrefs) {
   articleCollection.findOne({
      'href': { $in: hrefs }
   }, function (err, href) {
      if (err) {
         console.log('ERROR:' + err);
      } else if (!href) {
         console.log('no');
      } else {
         console.log('yes');
         // return true;
      }
   });
}
